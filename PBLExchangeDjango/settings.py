"""
Django settings for PBLExchangeDjango project.

Generated by 'django-admin startproject' using Django 1.11.4.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os
import PBLExchangeDjango.private_settings as ps
from django.utils.translation import ugettext_lazy as _

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = ps.SECRET_KEY

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

# Security settings
SECURE_CONTENT_TYPE_NOSNIFF = True
SECURE_BROWSER_XSS_FILTER = True
SECURE_SSL_REDIRECT = True
SESSION_COOKIE_SECURE = True
CSRF_COOKIE_SECURE = True

PBL_VERSION = "1.0-dev"

ALLOWED_HOSTS = ['pblexchange.sfx.aau.dk', 'pblexchange.aau.dk']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'pblexchange.apps.PblexchangeConfig',
    'pble_questions',
    'ckeditor',
    'ckeditor_uploader',
    'django_cas_ng',
    'pble_users',
    'pble_subscriptions',
    'djcelery',
    'widget_tweaks',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'PBLExchangeDjango.middleware.LoginRequiredMiddleware',
    'pble_users.middleware.LanguageMiddleware',
]

AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend',
    'PBLExchangeDjango.custom_CASBackend.CustomCASBackend',
)

ROOT_URLCONF = 'PBLExchangeDjango.urls'

# Mail settings
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_USE_TLS = True
EMAIL_HOST = ps.EMAIL_HOST
EMAIL_HOST_USER = ps.EMAIL_HOST_USER
# SECURITY WARNING: keep the password private!
EMAIL_HOST_PASSWORD = ps.EMAIL_HOST_PASSWORD
EMAIL_PORT = 587

# Since send_mass_mail() does not work with HTML we use Django's EmailMultiAlternatives (see pble_subscription/tasks.py)
ALTERNATE_EMAIL_HOST_PASSWORD = ps.ALTERNATE_EMAIL_HOST_PASSWORD
ALTERNATE_EMAIL_HOST_USER = ps.ALTERNATE_EMAIL_HOST_USER
ALTERNATE_EMAIL_HOST = ps.ALTERNATE_EMAIL_HOST
ALTERNATE_EMAIL_PORT = 587
ALTERNATE_EMAIL_USE_TLS = True

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR,  'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'PBLExchangeDjango.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

def read_pg_settings(file):
    with open(file, 'r') as pg_file:
        pg_lines = pg_file.readlines()
    pg_lines = [line[len("export PG"):].split('=', 1) for line in pg_lines]
    pg = {k: v.replace('"', '') for k, v in pg_lines}
    pg['ENGINE'] = 'django.db.backends.postgresql_psycopg2'
    pg['NAME'] = pg['DATABASE']
    del pg['DATABASE']
    return pg


DATABASES = {
    'default': read_pg_settings('../postgres-credentials.sh')
}


# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

LANGUAGES = [
    ('en-gb', _('English')),
    ('da', _('Danish')),
]

LOCALE_PATHS = [
    os.path.join(BASE_DIR, 'locale'),
]

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = 'static/'

MEDIA_URL = '/media/'
MEDIA_ROOT = 'media/'


# PBLE Defaults
PBLE_DEFAULT_SETTINGS = {
    'question_up_vote_points': '5',
    'answer_up_vote_points': '10',
    'comment_up_vote_points': '2',
    'question_down_vote_points': '-2',
    'answer_down_vote_points': '-2',
    'comment_down_vote_points': '-1',
    'accepted_answer_points': '15',
    'accepted_answer_acceptor_points': '2'
}

# Default PBLE groups, Thresholds may be changed but increasing order must be preserved
PBLE_GROUPS = [('PBL-novice', 1), ('PBL-experienced', 500), ('PBL-expert', 1000)]

# CKEditor upload settings
CKEDITOR_UPLOAD_PATH = 'uploads/'

# Login settings
LOGIN_URL = 'login'
EXEMPT_USERS = ['aklost11', 'gblegm13', 'csteph13']
DISALLOWED_DOMAINS = ['student.aau.dk']

# Login redirect
LOGIN_REDIRECT_URL = 'home'
LOGOUT_REDIRECT_URL = 'home'

#Django-cas-ng settings
CAS_SERVER_URL = 'https://signon.aau.dk/cas/'
CAS_VERSION = 'CAS_2_SAML_1_0'
CAS_APPLY_ATTRIBUTES_TO_USER = True

# Celery related settings
CELERY_BROKER_URL = ps.CELERY_BROKER_URL
CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TIMEZONE = TIME_ZONE
CELERY_RESULT_BACKEND = 'djcelery.backends.database:DatabaseBackend'
CELERYBEAT_SCHEDULER = 'djcelery.schedulers.DatabaseScheduler'

# Set site id for the django.contrib.sites framework
SITE_ID = 1     # TODO: On release set django_site domain field to pblexchange.aau.dk

# Whoosh search settings
WHOOSH_STORAGE_DIR = 'data/whoosh'
